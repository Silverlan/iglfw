name: Build

on: [push]

#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
    
env:
  shared_cmake_definitions: ''

jobs:
  # WINDOWS x64 MSVC
  build-windows:
    name: Build-Windows-x64
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows x64 MSVC",
            os: windows-latest,
            artifact: "Windows-MSVC.tar.xz",
            build_type: "RelWithDebInfo",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            cc: "cl",
            cxx: "cl",
            archiver: "7z a",
            generators: "Visual Studio 16 2019"
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Download submodules
        run: |
          git submodule update --init --recursive
          
      - name: Build submodule - glfw
        uses: Silverlan/common_actions/build_submodule@actions
        with:
          repo: 'https://github.com/glfw/glfw.git'
          repo_name: 'glfw'
          repo_branch: '3.3-stable'
          build_target: 'src/glfw'
          cmake_var: 'DEPENDENCY_GLFW_INCLUDE'
          cmake_var_lib: 'DEPENDENCY_GLFW_LIBRARY'
          lib_name: 'src/${{ matrix.config.build_type }}/glfw3dll'
          
      - name: Download common external libs
        uses: Silverlan/common_actions/get_common_external_libs@actions
          
      - name: CMake Build
        uses: Silverlan/common_actions/build_cmake@actions
        with:
          build_target: 'iglfw'
          build_type: ${{ matrix.config.build_type }}
          build_generator: ${{ matrix.config.generators }}
          cmake_definitions: ${{ env.shared_cmake_definitions }} -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
          
  # UBUNTU x64 GCC
  build-ubuntu:
    name: Build-Ubuntu-x64
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu GCC-11",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "RelWithDebInfo",
            cc: "gcc-11",
            cxx: "g++-11",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install GCC-11
        run: |
          sudo apt update
          sudo apt install gcc-11 g++-11
          
      - name: Download submodules
        run: |
          git submodule update --init --recursive
          
      - name: CMake Build
        uses: Silverlan/common_actions/build_cmake@main
        with:
          build_type: ${{ matrix.config.build_type }}
          build_generator: ${{ matrix.config.generators }}
          cmake_definitions: ${{ env.shared_cmake_definitions }} -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
